type AttestorSwapped @entity(immutable: true) {
  id: Bytes!
  dealId: BigInt! # uint256
  newAttestor: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ExpiryExtended @entity(immutable: true) {
  id: Bytes!
  dealId: BigInt! # uint256
  newExpiry: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IDUnverified @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type IDVerified @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OfferPosted @entity(immutable: true) {
  id: Bytes!
  dealId: BigInt! # uint256
  dealType: String! # string
  opportunityName: String! # string
  seller: Bytes! # address
  sellerDeposit: BigInt! # uint256
  expiryBlock: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OfferTaken @entity(immutable: true) {
  id: Bytes!
  dealId: BigInt! # uint256
  buyer: Bytes! # address
  buyerDeposit: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Refunded @entity(immutable: true) {
  id: Bytes!
  dealId: BigInt! # uint256
  seller: Bytes! # address
  buyer: Bytes! # address
  sellerDeposit: BigInt! # uint256
  buyerDeposit: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TradeSettled @entity(immutable: true) {
  id: Bytes!
  dealId: BigInt! # uint256
  seller: Bytes! # address
  buyer: Bytes! # address
  sellerDeposit: BigInt! # uint256
  buyerDeposit: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
